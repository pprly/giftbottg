import { useState, useEffect } from 'react'
import { Card } from '@telegram-apps/telegram-ui'
import './AchievementsPage.css'

function AchievementsPage({ user, tg }) {
  const [achievements, setAchievements] = useState([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    fetchAchievements()
  }, [user])

  const fetchAchievements = async () => {
    try {
      // TODO: –ó–∞–ø—Ä–æ—Å –∫ API –±–æ—Ç–∞
      // Mock –¥–∞–Ω–Ω—ã–µ
      const mockAchievements = [
        { id: 1, name: '–ù–æ–≤–∏—á–æ–∫', emoji: 'üéØ', description: '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ 5 –∫–æ–Ω–∫—É—Ä—Å–∞—Ö', progress: 5, target: 5, earned: true },
        { id: 2, name: '–í–µ–∑—É–Ω—á–∏–∫', emoji: 'üçÄ', description: '–í—ã–∏–≥—Ä–∞—Ç—å 5 —Ä–∞–∑', progress: 3, target: 5, earned: false },
        { id: 3, name: '–î—Ä—É–≥', emoji: 'üëã', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 –¥—Ä—É–∑–µ–π', progress: 5, target: 5, earned: true },
        { id: 4, name: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π', emoji: 'üåü', description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 25 –¥—Ä—É–∑–µ–π', progress: 5, target: 25, earned: false },
        { id: 5, name: '–°–µ—Ä–∏—è –ø–æ–±–µ–¥', emoji: 'üî•', description: '–í—ã–∏–≥—Ä–∞—Ç—å 3 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥', progress: 2, target: 3, earned: false },
        { id: 6, name: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', emoji: '‚≠ê', description: '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ 50 –∫–æ–Ω–∫—É—Ä—Å–∞—Ö', progress: 12, target: 50, earned: false }
      ]

      setTimeout(() => {
        setAchievements(mockAchievements)
        setLoading(false)
      }, 300)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:', error)
      setLoading(false)
    }
  }

  const earnedCount = achievements.filter(a => a.earned).length

  return (
    <div className="achievements-page">
      <div className="achievements-header">
        <h1>‚≠ê –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h1>
        <p>–ü–æ–ª—É—á–µ–Ω–æ: {earnedCount} –∏–∑ {achievements.length}</p>
      </div>

      <div className="achievements-grid">
        {achievements.map(achievement => (
          <Card key={achievement.id} className={`achievement-card ${achievement.earned ? 'earned' : 'locked'}`}>
            <div className="achievement-icon">
              {achievement.earned ? achievement.emoji : 'üîí'}
            </div>
            <h3 className="achievement-name">{achievement.name}</h3>
            <p className="achievement-description">{achievement.description}</p>
            
            {!achievement.earned && (
              <div className="achievement-progress">
                <div className="progress-bar">
                  <div 
                    className="progress-fill" 
                    style={{ width: `${(achievement.progress / achievement.target) * 100}%` }}
                  />
                </div>
                <span className="progress-text">
                  {achievement.progress} / {achievement.target}
                </span>
              </div>
            )}
            
            {achievement.earned && (
              <div className="achievement-earned">
                ‚úì –ü–æ–ª—É—á–µ–Ω–æ
              </div>
            )}
          </Card>
        ))}
      </div>
    </div>
  )
}

export default AchievementsPage