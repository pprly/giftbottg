import { useState, useEffect } from 'react'
import { Button, Placeholder, Card } from '@telegram-apps/telegram-ui'
import { fetchUserStats } from '../api'
import './StatsPage.css'

function StatsPage({ user, tg }) {
  const [stats, setStats] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    loadStats()
  }, [user])

  const loadStats = async () => {
    try {
      setLoading(true)
      setError(null)
      const data = await fetchUserStats()
      setStats(data)
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
    } finally {
      setLoading(false)
    }
  }

  const shareReferral = () => {
    if (tg) {
      const botUsername = import.meta.env.VITE_BOT_USERNAME || 'your_bot'
      const referralLink = `https://t.me/${botUsername}?start=ref_${user?.id}`
      
      tg.openTelegramLink(`https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫–æ–Ω–∫—É—Ä—Å–∞–º! üéÅ')}`)
    }
  }

  if (loading) {
    return (
      <div className="stats-page">
        <Placeholder description="–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...">
          <span style={{ fontSize: '48px' }}>üìä</span>
        </Placeholder>
      </div>
    )
  }

  if (error) {
    return (
      <div className="stats-page">
        <Placeholder 
          description={error}
          action={<Button onClick={loadStats}>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</Button>}
        >
          <span style={{ fontSize: '48px' }}>‚ö†Ô∏è</span>
        </Placeholder>
      </div>
    )
  }

  return (
    <div className="stats-page">
      {/* Hero —Å–µ–∫—Ü–∏—è */}
      <div className="stats-hero">
        <div className="stats-hero-content">
          <h1 className="stats-hero-title">
            –ü—Ä–∏–≤–µ—Ç, {user?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üëã
          </h1>
          <p className="stats-hero-subtitle">
            –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ Gift Bot
          </p>
        </div>
      </div>

      {/* –ì–ª–∞–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <div className="stats-grid">
        <Card className="stat-card stat-card-primary">
          <div className="stat-icon">üèÜ</div>
          <div className="stat-value">{stats.totalWins}</div>
          <div className="stat-label">–ü–æ–±–µ–¥</div>
        </Card>

        <Card className="stat-card stat-card-secondary">
          <div className="stat-icon">üéØ</div>
          <div className="stat-value">{stats.totalContests}</div>
          <div className="stat-label">–£—á–∞—Å—Ç–∏–π</div>
        </Card>

        <Card className="stat-card stat-card-accent">
          <div className="stat-icon">üë•</div>
          <div className="stat-value">{stats.referrals}</div>
          <div className="stat-label">–†–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
        </Card>

        {stats.bestStreak > 0 && (
          <Card className="stat-card stat-card-fire">
            <div className="stat-icon">üî•</div>
            <div className="stat-value">{stats.bestStreak}</div>
            <div className="stat-label">–õ—É—á—à–∞—è —Å–µ—Ä–∏—è</div>
          </Card>
        )}
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–±–µ–¥ */}
      {stats.totalWins > 0 && (
        <div className="stats-section">
          <h2 className="section-title">üéñÔ∏è –¢–≤–æ–∏ –ø–æ–±–µ–¥—ã</h2>
          <Card className="stats-detailed-card">
            <div className="detailed-stat-row">
              <div className="detailed-stat-item">
                <span className="detailed-stat-emoji">üó≥Ô∏è</span>
                <div className="detailed-stat-info">
                  <div className="detailed-stat-label">–ì–æ–ª–æ—Å–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ</div>
                  <div className="detailed-stat-value">{stats.votingWins}</div>
                </div>
              </div>
            </div>
            
            <div className="detailed-stat-divider"></div>
            
            <div className="detailed-stat-row">
              <div className="detailed-stat-item">
                <span className="detailed-stat-emoji">üé∞</span>
                <div className="detailed-stat-info">
                  <div className="detailed-stat-label">–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä</div>
                  <div className="detailed-stat-value">{stats.randomWins}</div>
                </div>
              </div>
            </div>
            
            <div className="detailed-stat-divider"></div>
            
            <div className="detailed-stat-row">
              <div className="detailed-stat-item">
                <span className="detailed-stat-emoji">‚ö°</span>
                <div className="detailed-stat-info">
                  <div className="detailed-stat-label">–°–ø–∞–º-–∫–æ–Ω–∫—É—Ä—Å</div>
                  <div className="detailed-stat-value">{stats.spamWins}</div>
                </div>
              </div>
            </div>
          </Card>
        </div>
      )}

      {/* –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      <div className="stats-section">
        <Card className="referral-card">
          <div className="referral-card-content">
            <div className="referral-icon">üéÅ</div>
            <h3 className="referral-title">–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π!</h3>
            <p className="referral-description">
              –ü–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞
            </p>
            <Button 
              size="l" 
              stretched 
              onClick={shareReferral}
              className="referral-button"
            >
              üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
            </Button>
          </div>
        </Card>
      </div>
    </div>
  )
}

export default StatsPage

