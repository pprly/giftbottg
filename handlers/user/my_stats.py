"""
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, —Å—á—ë—Ç—á–∏–∫–∏, –ø—Ä–æ–≥—Ä–µ—Å—Å
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database_postgres import db
from urllib.parse import quote


router = Router()


@router.callback_query(F.data == "my_stats")
async def show_my_stats(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –ë–î
    stats = await db.get_user_stats(user_id)
    referral_count = await db.get_referral_count(user_id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    bot_username = (await callback.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
    
    text = (
        "üìä <b>–í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>\n\n"
        f"üë• –†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {referral_count}\n"
        f"üéØ –£—á–∞—Å—Ç–∏–π –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö: {stats['total_contests']}\n"
        f"üèÜ –ü–æ–±–µ–¥: {stats['total_wins']}\n\n"
        f"üí° <b>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π!</b>\n"
        f"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!"
    )
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–±–µ–¥—ã –ø–æ —Ç–∏–ø–∞–º
    if stats['total_wins'] > 0:
        text += "\n\nüìà <b>–ü–æ–±–µ–¥—ã –ø–æ —Ç–∏–ø–∞–º:</b>\n"
        if stats.get('voting_wins', 0) > 0:
            text += f"üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ: {stats['voting_wins']}\n"
        if stats.get('random_wins', 0) > 0:
            text += f"üé∞ –†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä: {stats['random_wins']}\n"
        if stats.get('spam_wins', 0) > 0:
            text += f"‚ö° –°–ø–∞–º-–∫–æ–Ω–∫—É—Ä—Å: {stats['spam_wins']}\n"
    
    # –°–µ—Ä–∏–∏ –ø–æ–±–µ–¥
    if stats.get('best_win_streak', 0) > 0:
        text += f"\nüî• <b>–õ—É—á—à–∞—è —Å–µ—Ä–∏—è –ø–æ–±–µ–¥:</b> {stats['best_win_streak']}\n"
    
    builder = InlineKeyboardBuilder()
    
    # ‚úÖ –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê - Inline Mode
    builder.button(
        text="üì§ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞", 
        switch_inline_query="–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"  # –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É (–¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é)
    # builder.button(
    #    text="üîó –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É",
    #    callback_data="copy_referral_link"
    #)
    
    builder.button(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")
    builder.adjust(1)
    
    await callback.message.edit_text(
        text,
        reply_markup=builder.as_markup(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "copy_referral_link")
async def copy_referral_link(callback: CallbackQuery):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    user_id = callback.from_user.id
    bot_username = (await callback.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start=ref_{user_id}"
    
    await callback.answer(
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{referral_link}\n\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º!",
        show_alert=True
    )


