"""
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder


router = Router()


@router.callback_query(F.data == "faq_referral")
async def show_referral_info(callback: CallbackQuery):
    """
    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
    """
    text = (
        "üë• **–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –ü–†–û–ì–†–ê–ú–ú–ê**\n\n"
        
        "**–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É:**\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ \"üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n"
        "2Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É\n"
        "3Ô∏è‚É£ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ–π —Å –¥—Ä—É–∑—å—è–º–∏\n\n"
        
        "**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**\n"
        "‚Ä¢ –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ\n"
        "‚Ä¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–Ω–∞–ª\n"
        "‚Ä¢ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 –æ—á–∫–æ üåü\n\n"
        
        "**–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã –æ—á–∫–∏:**\n"
        "‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö\n"
        "‚Ä¢ –ë–æ–ª—å—à–µ –æ—á–∫–æ–≤ = –±–æ–ª—å—à–µ —à–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç—å\n"
        "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
        
        "**–ü—Ä–∞–≤–∏–ª–∞:**\n"
        "‚Ä¢ –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é –∂–µ —Å—Å—ã–ª–∫—É\n"
        "‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª –¥–æ–ª–∂–µ–Ω –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª\n"
        "‚Ä¢ –û–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑\n"
        "‚Ä¢ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª —Ç–æ–∂–µ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π"
    )
    
    builder = InlineKeyboardBuilder()
    builder.button(text="üîô –ù–∞–∑–∞–¥ –∫ FAQ", callback_data="how_to_participate")
    
    await callback.message.edit_text(
        text,
        reply_markup=builder.as_markup(),
        parse_mode="Markdown"
    )
    await callback.answer()
